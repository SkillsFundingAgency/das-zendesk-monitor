trigger:
  batch: true
  branches:
    include:
      - "*"

pr: none

workspace:
    clean: all

variables:
  buildConfiguration: 'release'
  buildPlatform: 'anycpu'

resources:
  repositories:
  - repository: das-platform-building-blocks
    type: github
    name: SkillsFundingAgency/das-platform-building-blocks
    ref: refs/tags/0.4.10
    endpoint: SkillsFundingAgency

pool:
  name: DAS - Continuous Integration Agents
  demands: LATEST_DOTNET_VERSION -equals 3.1

steps:
- template: azure-pipelines-templates/build/step/gitversion.yml@das-platform-building-blocks
    
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: 'src/**/*.csproj'
    noCache: true

- task: DotNetCoreCLI@2
  displayName: Build
  env:
    MSBUILDSINGLELOADCONTEXT: 1
  inputs:
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*.UnitTests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-build'

- task: DotNetCoreCLI@2
  displayName: 'Publish Function App'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/SFA.DAS.Zendesk.Monitor.Function/SFA.DAS.Zendesk.Monitor.Function.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'

- task: DotNetCoreCLI@2
  displayName: 'Publish User Acceptance Tests'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src/SFA.DAS.Zendesk.Monitor.UserAcceptanceTests/SFA.DAS.Zendesk.Monitor.UserAcceptanceTests.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore --no-build'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |
     azure/**
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |     
     src/Check-TestResults.ps1
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/publish'
