using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System;
using System.Collections.Generic;
using System.Globalization;

//namespace SFA.DAS.Zendesk.Monitor.Zendesk
//{
//    public class Ticket
//    {
//        public long Id { get; set; }

//        public string Url { get; set; }

//        public string Subject { get; set; }
//    }
//}

// <auto-generated />

namespace SFA.DAS.Zendesk.Monitor.Zendesk
{
    public partial class Empty
    {
        //[JsonProperty("ticket")]
        public Ticket Ticket { get; set; }
    }

    public partial class Ticket
    {
        //[JsonProperty("url")]
        public Uri Url { get; set; }

        //[JsonProperty("id")]
        public long Id { get; set; }

        public Comment Comment { get; set; }

        //[JsonProperty("external_id")]
        public object ExternalId { get; set; }

        //[JsonProperty("via")]
        public Via Via { get; set; }

        //[JsonProperty("created_at")]
        public DateTimeOffset? CreatedAt { get; set; }

        //[JsonProperty("updated_at")]
        public DateTimeOffset? UpdatedAt { get; set; }

        //[JsonProperty("type")]
        public string Type { get; set; }

        //[JsonProperty("subject")]
        public string Subject { get; set; }

        //[JsonProperty("raw_subject")]
        public string RawSubject { get; set; }

        //[JsonProperty("description")]
        public string Description { get; set; }

        //[JsonProperty("priority")]
        public string Priority { get; set; }

        //[JsonProperty("status")]
        public string Status { get; set; }

        //[JsonProperty("recipient")]
        public object Recipient { get; set; }

        //[JsonProperty("requester_id")]
        public long? RequesterId { get; set; }

        //[JsonProperty("submitter_id")]
        public long? SubmitterId { get; set; }

        //[JsonProperty("assignee_id")]
        public object AssigneeId { get; set; }

        //[JsonProperty("organization_id")]
        public object OrganizationId { get; set; }

        //[JsonProperty("group_id")]
        public long? GroupId { get; set; }

        //[JsonProperty("collaborator_ids")]
        public object[] CollaboratorIds { get; set; }

        //[JsonProperty("follower_ids")]
        public object[] FollowerIds { get; set; }

        //[JsonProperty("email_cc_ids")]
        public object[] EmailCcIds { get; set; }

        //[JsonProperty("forum_topic_id")]
        public object ForumTopicId { get; set; }

        //[JsonProperty("problem_id")]
        public object ProblemId { get; set; }

        //[JsonProperty("has_incidents")]
        public bool? HasIncidents { get; set; }

        //[JsonProperty("is_public")]
        public bool? IsPublic { get; set; }

        //[JsonProperty("due_at")]
        public object DueAt { get; set; }

        //[JsonProperty("tags")]
        public List<string> Tags { get; set; }

        //[JsonProperty("custom_fields")]
        public Field[] CustomFields { get; set; }

        //[JsonProperty("satisfaction_rating")]
        public SatisfactionRating SatisfactionRating { get; set; }

        //[JsonProperty("sharing_agreement_ids")]
        public object[] SharingAgreementIds { get; set; }

        //[JsonProperty("fields")]
        public Field[] Fields { get; set; }

        //[JsonProperty("followup_ids")]
        public object[] FollowupIds { get; set; }

        //[JsonProperty("ticket_form_id")]
        public long? TicketFormId { get; set; }

        //[JsonProperty("brand_id")]
        public long? BrandId { get; set; }

        //[JsonProperty("satisfaction_probability")]
        public object SatisfactionProbability { get; set; }

        //[JsonProperty("allow_channelback")]
        public bool? AllowChannelback { get; set; }

        //[JsonProperty("allow_attachments")]
        public bool? AllowAttachments { get; set; }
    }

    public partial class Comment
    {
        public string Body { get; set; }
    }

    public partial class Field
    {
        //[JsonProperty("id")]
        public long Id { get; set; }

        //[JsonProperty("value")]
        public object Value { get; set; }
    }

    public partial class SatisfactionRating
    {
        //[JsonProperty("score")]
        public string Score { get; set; }
    }

    public partial class Via
    {
        //[JsonProperty("channel")]
        public string Channel { get; set; }

        //[JsonProperty("source")]
        public Source Source { get; set; }
    }

    public partial class Source
    {
        //[JsonProperty("from")]
        public From From { get; set; }

        //[JsonProperty("to")]
        public From To { get; set; }

        //[JsonProperty("rel")]
        public object Rel { get; set; }
    }

    public partial class From
    {
    }

    public partial class Empty
    {
        public static Empty FromJson(string json) => JsonConvert.DeserializeObject<Empty>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Empty self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}

