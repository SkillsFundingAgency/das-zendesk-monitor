{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceEnvironmentName": {
            "type": "string"
        },
        "environmentName": {
            "type": "string"
        },
        "serviceName": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "workerAspSize": {
            "type": "string",
            "defaultValue": "1"
        },
        "workerAspInstances": {
            "type": "int",
            "defaultValue": 1
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "ZenDeskUrl": {
            "type": "string"
        },
        "ApiUser": {
            "type": "string"
        },
        "ApiKey": {
            "type": "securestring"
        },
        "MiddlewareUrl": {
            "type": "string"
        },
        "MiddlewareSubscriptionKey": {
            "type": "string"
        },
        "MiddlewareApiBasicAuth": {
            "type": "securestring"
        },
        "MonitorCronSetting": {
            "type": "string"
        },
        "functionsExtensionVersion": {
            "type": "string",
            "defaultValue": "~3"
        },
        "sharedEnvResourceGroup": {
            "type": "string"
        },
        "sharedEnvVirtualNetworkName": {
            "type": "string"
        },
        "subnetObject": {
            "type": "object"
        },
        "subnetServiceEndpointList": {
            "type": "array"
        },
        "subnetDelegations": {
            "type": "array"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "storageAccountName": "[toLower(concat('das', parameters('resourceEnvironmentName'), parameters('serviceName'), 'str'))]",
        "workerAppServicePlanName": "[concat(variables('resourceNamePrefix'), 'wkr-asp')]",
        "workerFunctionAppName": "[concat(variables('resourceNamePrefix'),'-wkr-fa')]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]"

    },
    "resources": [
        {
            "apiVersion": "2020-06-01",
            "name": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "worker-app-service-subnet",
            "resourceGroup": "[parameters('sharedEnvResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'subnet.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('sharedEnvVirtualNetworkName')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetObject').name]"
                    },
                    "subnetAddressPrefix": {
                        "value": "[parameters('subnetObject').addressSpace]"
                    },
                    "serviceEndpointList": {
                        "value": "[parameters('subnetServiceEndpointList')]"
                    },
                    "delegations": {
                        "value": "[parameters('subnetDelegations')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "storage-account",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "worker-app-service-plan",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('workerAppServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('workerAspSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('workerAspInstances')]"
                    },
                    "nonASETier": {
                        "value": "Basic"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "worker-function-app-insights",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('workerFunctionAppName')]"
                    },
                    "attachedService": {
                        "value": "[variables('workerFunctionAppName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "name": "worker-function-app",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[variables('resourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'function-app.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[variables('workerFunctionAppName')]"
                    },
                    "appServicePlanName": {
                        "value": "[variables('workerAppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[variables('resourceGroupName')]"
                    },
                    "subnetResourceId": {
                        "value": "[reference('worker-app-service-subnet').outputs.SubnetResourceId.value]"
                    },
                    "functionAppAppSettings": {
                        "value": [
                            {
                                "name": "AzureWebJobsStorage",
                                "value": "[reference('storage-account').outputs.storageConnectionString.value]"
                            },
                            {
                                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                                "value": "[reference('worker-function-app-insights').outputs.InstrumentationKey.value]"
                            },
                            {
                                "name": "FUNCTIONS_EXTENSION_VERSION",
                                "value": "[parameters('functionsExtensionVersion')]"
                            },
                            {
                                "name": "FUNCTIONS_WORKER_RUNTIME",
                                "value": "dotnet"
                            },
                            {
                                "name": "EnvironmentName",
                                "value": "[toUpper(parameters('environmentName'))]"
                            },
                            {
                                "name": "LoggingRedisConnectionString",
                                "value": "[parameters('loggingRedisConnectionString')]"
                            },
                            {
                                "name": "ConfigurationStorageConnectionString",
                                "value": "[parameters('configurationStorageConnectionString')]"
                            },
                            {
                                "name": "Zendesk:Url",
                                "value": "[parameters('ZenDeskUrl')]"
                            },
                            {
                                "name": "Zendesk:ApiUser",
                                "value": "[parameters('ApiUser')]"
                            },
                            {
                                "name": "Zendesk:ApiKey",
                                "value": "[parameters('ApiKey')]"
                            },
                            {
                                "name": "Middleware:Url ",
                                "value": "[parameters('MiddlewareUrl')]"
                            },
                            {
                                "name": "Middleware:SubscriptionKey ",
                                "value": "[parameters('MiddlewareSubscriptionKey')]"
                            },
                            {
                                "name": "Middleware:ApiBasicAuth",
                                "value": "[parameters('MiddlewareApiBasicAuth')]"
                            },
                            {
                                "name": "MonitorCronSetting",
                                "value": "[parameters('MonitorCronSetting')]"
                            },
                            {
                                "name": "AppName",
                                "value": "das-zendesk-monitor"
                            }
                        ]
                    },
                    "functionAppConnectionStrings": {
                        "value": [
                            {
                                "name": "Redis",
                                "connectionString": "[parameters('loggingRedisConnectionString')]",
                                "type": "Custom"
                            }
                        ]
                    }
                }
            },
            "dependsOn": [
                "worker-app-service-subnet",
                "worker-app-service-plan",
                "storage-account"
            ]
        }
    ],
    "outputs": {
        "WorkerFunctionAppName": {
            "type": "string",
            "value": "[variables('workerFunctionAppName')]"
        },
        "ResourceGroupName": {
            "type": "string",
            "value": "[variables('resourceGroupName')]"
        }
    }
}
